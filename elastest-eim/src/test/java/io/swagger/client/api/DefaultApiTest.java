/*
 * ElasTest Instrumentation Manager
 * RESTful API specification for the ElasTest Instrumentation Manager (EIM)
 *
 * OpenAPI spec version: 1.0.0
 * Contact: david.rojoa@atos.net
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.api;

import io.swagger.client.ApiException;
import io.swagger.client.model.Agent;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Ignore
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    
    /**
     * Delete a agent
     *
     * A client delete a agent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteAgentTest() throws ApiException {
        String agentId = null;
        api.deleteAgent(agentId);

        // TODO: test validations
    }
    
    /**
     * Retrieve a agent
     *
     * A client retrieves a agent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAgentTest() throws ApiException {
        String agentId = null;
        api.getAgent(agentId);

        // TODO: test validations
    }
    
    /**
     * Retrieve all agents
     *
     * A client retrieves all agents
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getAgentsTest() throws ApiException {
        Agent events = null;
        api.getAgents(events);

        // TODO: test validations
    }
    
    /**
     * Submit an action agent
     *
     * A client submit an action to agent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postActionTest() throws ApiException {
        String agentId = null;
        String actionId = null;
        api.postAction(agentId, actionId);

        // TODO: test validations
    }
    
    /**
     * Register an agent
     *
     * A client registers an agent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void postAgentTest() throws ApiException {
        Agent events = null;
        api.postAgent(events);

        // TODO: test validations
    }
    
    /**
     * update a agent
     *
     * A client updates a agent
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void putAgentTest() throws ApiException {
        String agentId = null;
        api.putAgent(agentId);

        // TODO: test validations
    }
    
}
